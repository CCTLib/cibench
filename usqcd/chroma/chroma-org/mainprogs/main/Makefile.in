# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@BUILD_MDWF_TRUE@am__append_1 = @MDWF_CXXFLAGS@
@BUILD_MDWF_TRUE@am__append_2 = @MDWF_LDFLAGS@
@BUILD_MDWF_TRUE@am__append_3 = @MDWF_LIBS@
@USE_LLVM_WD_TRUE@am__append_4 = @LLVM_WD_CXXFLAGS@
@USE_LLVM_WD_TRUE@am__append_5 = @LLVM_WD_LDFLAGS@
@USE_LLVM_WD_TRUE@am__append_6 = @LLVM_WD_LIBS@
@BUILD_QUDA_TRUE@am__append_7 = @QUDA_CXXFLAGS@
@BUILD_QUDA_TRUE@am__append_8 = @QUDA_LDFLAGS@
@BUILD_QUDA_TRUE@am__append_9 = @QUDA_LIBS@
@BUILD_QOP_MG_TRUE@am__append_10 = -L@top_builddir@/other_libs/wilsonmg/lib @QOP_MG_LDFLAGS@
@BUILD_QOP_MG_TRUE@am__append_11 = @QOP_MG_LIBS@
@BUILD_QPHIX_TRUE@am__append_12 = @QPHIX_CXXFLAGS@
@BUILD_QPHIX_TRUE@am__append_13 = @QPHIX_LDFLAGS@
@BUILD_QPHIX_TRUE@am__append_14 = @QPHIX_LIBS@
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@am__append_15 = -I@QDPC_DIR@/qmp/include \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-I@QDPC_DIR@/qio/include \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-I@QDPC_DIR@/qla/include \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-I@QDPC_DIR@/qdp/include \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-I@QDPC_DIR@/qopqdp/include
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@am__append_16 = -L@QDPC_DIR@/qopqdp/lib \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqopqdp \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-L@QDPC_DIR@/qdp/lib \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqdp_d3 -lqdp_df3 \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqdp_f3 -lqdp_df \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqdp_d -lqdp_f \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqdp_int \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqdp_common \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-L@QDPC_DIR@/qmp/lib \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqmp \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-L@QDPC_DIR@/qio/lib \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqio -llime \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-L@QDPC_DIR@/qla/lib \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_c99 \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_cmath \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_d3 -lqla_d \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_df3 -lqla_df \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_dq3 -lqla_dq \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_f3 -lqla_f \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_int -lqla_q3 \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_q \
@BUILD_ASQTAD_LEVEL3_INVERTER_WRAPPER_TRUE@	-lqla_random
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_17 = -I$(TOPDIR)/other_libs/@SSE_DSLASH_DIR@/include -I$(BUILDDIR)/other_libs/@SSE_DSLASH_DIR@/include
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_18 = -L$(BUILDDIR)/other_libs/@SSE_DSLASH_DIR@/lib
@BUILD_SSE_WILSON_DSLASH_TRUE@am__append_19 = -llevel3 @QDPXX_LIBS@
@BUILD_CPP_WILSON_DSLASH_TRUE@am__append_20 = -I$(TOPDIR)/other_libs/@CPP_DSLASH_DIR@/include -I$(BUILDDIR)/other_libs/@CPP_DSLASH_DIR@/include
@BUILD_CPP_WILSON_DSLASH_TRUE@am__append_21 = -L$(BUILDDIR)/other_libs/@CPP_DSLASH_DIR@/lib
@BUILD_CPP_WILSON_DSLASH_TRUE@am__append_22 = -ldslash @QDPXX_LIBS@
@BUILD_CG_DWF_TRUE@am__append_23 =  \
@BUILD_CG_DWF_TRUE@	-I$(TOPDIR)/other_libs/@CG_DWF_DIR@ \
@BUILD_CG_DWF_TRUE@	-I$(BUILDDIR)/other_libs/@CG_DWF_DIR@
@BUILD_CG_DWF_TRUE@am__append_24 = -L$(BUILDDIR)/other_libs/@CG_DWF_DIR@
@BUILD_CG_DWF_TRUE@am__append_25 = -lcg-dwf
@BUILD_BAGEL_CLOVER_APPLY_TRUE@am__append_26 = @BAGEL_CLOVER_CXXFLAGS@
@BUILD_BAGEL_CLOVER_APPLY_TRUE@am__append_27 = @BAGEL_CLOVER_LDFLAGS@
@BUILD_BAGEL_CLOVER_APPLY_TRUE@am__append_28 = @BAGEL_CLOVER_LIBS@
@BUILD_QMT_TRUE@am__append_29 = @QMT_CXXFLAGS@
@BUILD_QMT_TRUE@am__append_30 = @QMT_LDFLAGS@
@BUILD_QMT_TRUE@am__append_31 = @QMT_LIBS@
bin_PROGRAMS = chroma$(EXEEXT) purgaug$(EXEEXT) cfgtransf$(EXEEXT) \
	const_hmc$(EXEEXT) hmc$(EXEEXT) spectrum_s$(EXEEXT)
check_PROGRAMS = collect_propcomp$(EXEEXT) qpropgfix$(EXEEXT) \
	qproptrev$(EXEEXT) qpropqio$(EXEEXT) qproptransf$(EXEEXT) \
	wallformfac$(EXEEXT)
EXTRA_PROGRAMS = qpropadd$(EXEEXT) propagator_comp$(EXEEXT) \
	multi_propagator$(EXEEXT) multi_propagator_comp$(EXEEXT) \
	collect_multi_propcomp$(EXEEXT) spectrum_s$(EXEEXT)
subdir = mainprogs/main
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/./config/mkinstalldirs \
	$(top_srcdir)/./config/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/./config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/lib/chroma_config_internal.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_cfgtransf_OBJECTS = cfgtransf.$(OBJEXT)
cfgtransf_OBJECTS = $(am_cfgtransf_OBJECTS)
cfgtransf_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
cfgtransf_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_chroma_OBJECTS = chroma.$(OBJEXT)
chroma_OBJECTS = $(am_chroma_OBJECTS)
chroma_LDADD = $(LDADD)
chroma_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_collect_multi_propcomp_OBJECTS = collect_multi_propcomp.$(OBJEXT)
collect_multi_propcomp_OBJECTS = $(am_collect_multi_propcomp_OBJECTS)
collect_multi_propcomp_LDADD = $(LDADD)
collect_multi_propcomp_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_collect_propcomp_OBJECTS = collect_propcomp.$(OBJEXT)
collect_propcomp_OBJECTS = $(am_collect_propcomp_OBJECTS)
collect_propcomp_LDADD = $(LDADD)
collect_propcomp_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_const_hmc_OBJECTS = const_hmc.$(OBJEXT)
const_hmc_OBJECTS = $(am_const_hmc_OBJECTS)
const_hmc_LDADD = $(LDADD)
const_hmc_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_hmc_OBJECTS = hmc.$(OBJEXT)
hmc_OBJECTS = $(am_hmc_OBJECTS)
hmc_LDADD = $(LDADD)
hmc_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
multi_propagator_SOURCES = multi_propagator.c
multi_propagator_OBJECTS = multi_propagator.$(OBJEXT)
multi_propagator_LDADD = $(LDADD)
multi_propagator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_multi_propagator_comp_OBJECTS = multi_propagator_comp.$(OBJEXT)
multi_propagator_comp_OBJECTS = $(am_multi_propagator_comp_OBJECTS)
multi_propagator_comp_LDADD = $(LDADD)
multi_propagator_comp_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_propagator_comp_OBJECTS = propagator_comp.$(OBJEXT)
propagator_comp_OBJECTS = $(am_propagator_comp_OBJECTS)
propagator_comp_LDADD = $(LDADD)
propagator_comp_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_purgaug_OBJECTS = purgaug.$(OBJEXT)
purgaug_OBJECTS = $(am_purgaug_OBJECTS)
purgaug_LDADD = $(LDADD)
purgaug_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_qpropadd_OBJECTS = qpropadd.$(OBJEXT)
qpropadd_OBJECTS = $(am_qpropadd_OBJECTS)
qpropadd_LDADD = $(LDADD)
qpropadd_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_qpropgfix_OBJECTS = qpropgfix.$(OBJEXT)
qpropgfix_OBJECTS = $(am_qpropgfix_OBJECTS)
qpropgfix_LDADD = $(LDADD)
qpropgfix_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_qpropqio_OBJECTS = qpropqio.$(OBJEXT)
qpropqio_OBJECTS = $(am_qpropqio_OBJECTS)
qpropqio_LDADD = $(LDADD)
qpropqio_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_qproptransf_OBJECTS = qproptransf.$(OBJEXT)
qproptransf_OBJECTS = $(am_qproptransf_OBJECTS)
qproptransf_LDADD = $(LDADD)
qproptransf_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_qproptrev_OBJECTS = qproptrev.$(OBJEXT)
qproptrev_OBJECTS = $(am_qproptrev_OBJECTS)
qproptrev_LDADD = $(LDADD)
qproptrev_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_spectrum_s_OBJECTS = spectrum_s.$(OBJEXT)
spectrum_s_OBJECTS = $(am_spectrum_s_OBJECTS)
spectrum_s_LDADD = $(LDADD)
spectrum_s_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_wallformfac_OBJECTS = wallformfac.$(OBJEXT)
wallformfac_OBJECTS = $(am_wallformfac_OBJECTS)
wallformfac_LDADD = $(LDADD)
wallformfac_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/lib
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(cfgtransf_SOURCES) $(chroma_SOURCES) \
	$(collect_multi_propcomp_SOURCES) $(collect_propcomp_SOURCES) \
	$(const_hmc_SOURCES) $(hmc_SOURCES) multi_propagator.c \
	$(multi_propagator_comp_SOURCES) $(propagator_comp_SOURCES) \
	$(purgaug_SOURCES) $(qpropadd_SOURCES) $(qpropgfix_SOURCES) \
	$(qpropqio_SOURCES) $(qproptransf_SOURCES) \
	$(qproptrev_SOURCES) $(spectrum_s_SOURCES) \
	$(wallformfac_SOURCES)
DIST_SOURCES = $(cfgtransf_SOURCES) $(chroma_SOURCES) \
	$(collect_multi_propcomp_SOURCES) $(collect_propcomp_SOURCES) \
	$(const_hmc_SOURCES) $(hmc_SOURCES) multi_propagator.c \
	$(multi_propagator_comp_SOURCES) $(propagator_comp_SOURCES) \
	$(purgaug_SOURCES) $(qpropadd_SOURCES) $(qpropgfix_SOURCES) \
	$(qpropqio_SOURCES) $(qproptransf_SOURCES) \
	$(qproptrev_SOURCES) $(spectrum_s_SOURCES) \
	$(wallformfac_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BAGEL_CLOVER_CONFIG = @BAGEL_CLOVER_CONFIG@
BAGEL_CLOVER_CXXFLAGS = @BAGEL_CLOVER_CXXFLAGS@
BAGEL_CLOVER_DSLASH_CXXFLAGS = @BAGEL_CLOVER_DSLASH_CXXFLAGS@
BAGEL_CLOVER_DSLASH_LDFLAGS = @BAGEL_CLOVER_DSLASH_LDFLAGS@
BAGEL_CLOVER_DSLASH_LIBS = @BAGEL_CLOVER_DSLASH_LIBS@
BAGEL_CLOVER_LDFLAGS = @BAGEL_CLOVER_LDFLAGS@
BAGEL_CLOVER_LIBS = @BAGEL_CLOVER_LIBS@
BAGEL_WILSON_DSLASH_CONFIG = @BAGEL_WILSON_DSLASH_CONFIG@
BAGEL_WILSON_DSLASH_CXXFLAGS = @BAGEL_WILSON_DSLASH_CXXFLAGS@
BAGEL_WILSON_DSLASH_LDFLAGS = @BAGEL_WILSON_DSLASH_LDFLAGS@
BAGEL_WILSON_DSLASH_LIBS = @BAGEL_WILSON_DSLASH_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CG_DWF_DIR = @CG_DWF_DIR@
CG_DWF_ENABLED = @CG_DWF_ENABLED@
CPPFLAGS = @CPPFLAGS@
CPP_DSLASH_DIR = @CPP_DSLASH_DIR@
CPP_DSLASH_ENABLED = @CPP_DSLASH_ENABLED@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DVIPDF = @DVIPDF@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
GMP_CXXFLAGS = @GMP_CXXFLAGS@
GMP_LDFLAGS = @GMP_LDFLAGS@
GMP_LIBS = @GMP_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_ENABLED = @LAPACK_ENABLED@
LATEX = @LATEX@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LLVM_WD_CXXFLAGS = @LLVM_WD_CXXFLAGS@
LLVM_WD_LDFLAGS = @LLVM_WD_LDFLAGS@
LLVM_WD_LIBS = @LLVM_WD_LIBS@
LLVM_WILSON_DSLASH_ENABLED = @LLVM_WILSON_DSLASH_ENABLED@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MDWF_CONFIG = @MDWF_CONFIG@
MDWF_CXXFLAGS = @MDWF_CXXFLAGS@
MDWF_ENABLED = @MDWF_ENABLED@
MDWF_LDFLAGS = @MDWF_LDFLAGS@
MDWF_LIBS = @MDWF_LIBS@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
OPT_EIGCG_ENABLED = @OPT_EIGCG_ENABLED@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
QDPC_DIR = @QDPC_DIR@
QDPXX_CONFIG = @QDPXX_CONFIG@
QDPXX_CXXFLAGS = @QDPXX_CXXFLAGS@
QDPXX_LDFLAGS = @QDPXX_LDFLAGS@
QDPXX_LIBS = @QDPXX_LIBS@
QDPXX_NC = @QDPXX_NC@
QDPXX_ND = @QDPXX_ND@
QDPXX_NS = @QDPXX_NS@
QDPXX_PARALLEL_ARCH = @QDPXX_PARALLEL_ARCH@
QDPXX_PRECISION = @QDPXX_PRECISION@
QDP_LAPACK_DIR = @QDP_LAPACK_DIR@
QMT_CXXFLAGS = @QMT_CXXFLAGS@
QMT_LDFLAGS = @QMT_LDFLAGS@
QMT_LIBS = @QMT_LIBS@
QOP_MG_CXXFLAGS = @QOP_MG_CXXFLAGS@
QOP_MG_DIR = @QOP_MG_DIR@
QOP_MG_ENABLED = @QOP_MG_ENABLED@
QOP_MG_LDFLAGS = @QOP_MG_LDFLAGS@
QOP_MG_LIBS = @QOP_MG_LIBS@
QPHIX_CXXFLAGS = @QPHIX_CXXFLAGS@
QPHIX_LDFLAGS = @QPHIX_LDFLAGS@
QPHIX_LIBS = @QPHIX_LIBS@
QUDA_CXXFLAGS = @QUDA_CXXFLAGS@
QUDA_LDFLAGS = @QUDA_LDFLAGS@
QUDA_LIBS = @QUDA_LIBS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSE_DSLASH_DIR = @SSE_DSLASH_DIR@
SSE_DSLASH_ENABLED = @SSE_DSLASH_ENABLED@
STRIP = @STRIP@
VERSION = @VERSION@
XMLDIFF = @XMLDIFF@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#
TOPDIR = @top_srcdir@
BUILDDIR = @top_builddir@

#
# Include Path
#
INCFLAGS = -I$(TOPDIR)/mainprogs/main -I$(TOPDIR)/lib -I$(BUILDDIR)/lib

#
# Any other compiler flags
#
AM_CXXFLAGS = $(INCFLAGS) @QDPXX_CXXFLAGS@ \
	@BAGEL_WILSON_DSLASH_CXXFLAGS@ @GMP_CXXFLAGS@ \
	@QOP_MG_CXXFLAGS@ @CXXFLAGS@ $(am__append_1) $(am__append_4) \
	$(am__append_7) $(am__append_12) $(am__append_15) \
	$(am__append_17) $(am__append_20) $(am__append_23) \
	$(am__append_26) $(am__append_29)
AM_LDFLAGS = -L$(BUILDDIR)/lib @QDPXX_LDFLAGS@ \
	@BAGEL_WILSON_DSLASH_LDFLAGS@ @GMP_LDFLAGS@ @LDFLAGS@ \
	$(am__append_2) $(am__append_5) $(am__append_8) \
	$(am__append_10) $(am__append_13) \
	-L$(BUILDDIR)/other_libs/@QDP_LAPACK_DIR@/lib $(am__append_18) \
	$(am__append_21) $(am__append_24) $(am__append_27) \
	$(am__append_30)
LDADD = -lchroma @QDPXX_LIBS@ @BAGEL_WILSON_DSLASH_LIBS@ @GMP_LIBS@ \
	@LIBS@ $(am__append_3) $(am__append_6) $(am__append_9) \
	$(am__append_11) $(am__append_14) $(am__append_16) \
	-lqdp-lapack $(am__append_19) $(am__append_22) \
	$(am__append_25) $(am__append_28) $(am__append_31)

#
# Local Headers
#
HDRS = 

#
# The program and its dependencies
#
chroma_SOURCES = chroma.cc
propagator_comp_SOURCES = propagator_comp.cc
multi_propagator_comp_SOURCES = multi_propagator_comp.cc
collect_propcomp_SOURCES = collect_propcomp.cc
collect_multi_propcomp_SOURCES = collect_multi_propcomp.cc
spectrum_s_SOURCES = spectrum_s.cc
hmc_SOURCES = hmc.cc
const_hmc_SOURCES = const_hmc.cc
purgaug_SOURCES = purgaug.cc
wallformfac_SOURCES = wallformfac.cc
qproptransf_SOURCES = qproptransf.cc
qpropqio_SOURCES = qpropqio.cc
qpropadd_SOURCES = qpropadd.cc
qpropgfix_SOURCES = qpropgfix.cc
qproptrev_SOURCES = qproptrev.cc
cfgtransf_SOURCES = cfgtransf.cc

#
# The latter rule will always try to rebuild libchroma.a when you 
# try to compile example

# build lib is a target that goes to the build dir of the library and 
# does a make to make sure all those dependencies are OK. In order
# for it to be done every time, we have to make it a 'phony' target
DEPENDENCIES = build_chroma_libs rebuild_other_libs
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu mainprogs/main/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu mainprogs/main/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

cfgtransf$(EXEEXT): $(cfgtransf_OBJECTS) $(cfgtransf_DEPENDENCIES) $(EXTRA_cfgtransf_DEPENDENCIES) 
	@rm -f cfgtransf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cfgtransf_OBJECTS) $(cfgtransf_LDADD) $(LIBS)

chroma$(EXEEXT): $(chroma_OBJECTS) $(chroma_DEPENDENCIES) $(EXTRA_chroma_DEPENDENCIES) 
	@rm -f chroma$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(chroma_OBJECTS) $(chroma_LDADD) $(LIBS)

collect_multi_propcomp$(EXEEXT): $(collect_multi_propcomp_OBJECTS) $(collect_multi_propcomp_DEPENDENCIES) $(EXTRA_collect_multi_propcomp_DEPENDENCIES) 
	@rm -f collect_multi_propcomp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(collect_multi_propcomp_OBJECTS) $(collect_multi_propcomp_LDADD) $(LIBS)

collect_propcomp$(EXEEXT): $(collect_propcomp_OBJECTS) $(collect_propcomp_DEPENDENCIES) $(EXTRA_collect_propcomp_DEPENDENCIES) 
	@rm -f collect_propcomp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(collect_propcomp_OBJECTS) $(collect_propcomp_LDADD) $(LIBS)

const_hmc$(EXEEXT): $(const_hmc_OBJECTS) $(const_hmc_DEPENDENCIES) $(EXTRA_const_hmc_DEPENDENCIES) 
	@rm -f const_hmc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(const_hmc_OBJECTS) $(const_hmc_LDADD) $(LIBS)

hmc$(EXEEXT): $(hmc_OBJECTS) $(hmc_DEPENDENCIES) $(EXTRA_hmc_DEPENDENCIES) 
	@rm -f hmc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hmc_OBJECTS) $(hmc_LDADD) $(LIBS)

multi_propagator$(EXEEXT): $(multi_propagator_OBJECTS) $(multi_propagator_DEPENDENCIES) $(EXTRA_multi_propagator_DEPENDENCIES) 
	@rm -f multi_propagator$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(multi_propagator_OBJECTS) $(multi_propagator_LDADD) $(LIBS)

multi_propagator_comp$(EXEEXT): $(multi_propagator_comp_OBJECTS) $(multi_propagator_comp_DEPENDENCIES) $(EXTRA_multi_propagator_comp_DEPENDENCIES) 
	@rm -f multi_propagator_comp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(multi_propagator_comp_OBJECTS) $(multi_propagator_comp_LDADD) $(LIBS)

propagator_comp$(EXEEXT): $(propagator_comp_OBJECTS) $(propagator_comp_DEPENDENCIES) $(EXTRA_propagator_comp_DEPENDENCIES) 
	@rm -f propagator_comp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(propagator_comp_OBJECTS) $(propagator_comp_LDADD) $(LIBS)

purgaug$(EXEEXT): $(purgaug_OBJECTS) $(purgaug_DEPENDENCIES) $(EXTRA_purgaug_DEPENDENCIES) 
	@rm -f purgaug$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(purgaug_OBJECTS) $(purgaug_LDADD) $(LIBS)

qpropadd$(EXEEXT): $(qpropadd_OBJECTS) $(qpropadd_DEPENDENCIES) $(EXTRA_qpropadd_DEPENDENCIES) 
	@rm -f qpropadd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qpropadd_OBJECTS) $(qpropadd_LDADD) $(LIBS)

qpropgfix$(EXEEXT): $(qpropgfix_OBJECTS) $(qpropgfix_DEPENDENCIES) $(EXTRA_qpropgfix_DEPENDENCIES) 
	@rm -f qpropgfix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qpropgfix_OBJECTS) $(qpropgfix_LDADD) $(LIBS)

qpropqio$(EXEEXT): $(qpropqio_OBJECTS) $(qpropqio_DEPENDENCIES) $(EXTRA_qpropqio_DEPENDENCIES) 
	@rm -f qpropqio$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qpropqio_OBJECTS) $(qpropqio_LDADD) $(LIBS)

qproptransf$(EXEEXT): $(qproptransf_OBJECTS) $(qproptransf_DEPENDENCIES) $(EXTRA_qproptransf_DEPENDENCIES) 
	@rm -f qproptransf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qproptransf_OBJECTS) $(qproptransf_LDADD) $(LIBS)

qproptrev$(EXEEXT): $(qproptrev_OBJECTS) $(qproptrev_DEPENDENCIES) $(EXTRA_qproptrev_DEPENDENCIES) 
	@rm -f qproptrev$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qproptrev_OBJECTS) $(qproptrev_LDADD) $(LIBS)

spectrum_s$(EXEEXT): $(spectrum_s_OBJECTS) $(spectrum_s_DEPENDENCIES) $(EXTRA_spectrum_s_DEPENDENCIES) 
	@rm -f spectrum_s$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(spectrum_s_OBJECTS) $(spectrum_s_LDADD) $(LIBS)

wallformfac$(EXEEXT): $(wallformfac_OBJECTS) $(wallformfac_DEPENDENCIES) $(EXTRA_wallformfac_DEPENDENCIES) 
	@rm -f wallformfac$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wallformfac_OBJECTS) $(wallformfac_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfgtransf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chroma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collect_multi_propcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collect_propcomp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/const_hmc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hmc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_propagator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_propagator_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propagator_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/purgaug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropadd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropgfix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qpropqio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qproptransf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qproptrev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spectrum_s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wallformfac.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

${bin_PROGRAMS}: ${DEPENDENCIES}
${check_PROGRAMS}: ${DEPENDENCIES}
${EXTRA_PROGRAMS}: ${DEPENDENCIES}

.PHONY: build_chroma_libs
build_chroma_libs:
	cd $(BUILDDIR)/lib ; $(MAKE)

.PHONY: rebuild_other_libs
rebuild_other_libs:
	cd $(BUILDDIR)/other_libs ; $(MAKE)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
